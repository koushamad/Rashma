apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-deploy.yaml --out ./Rashma_Docker/k8s
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-deploy.yaml --out ./Rashma_Docker/k8s
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_PASSWORD
          value: rabbitmq
        - name: RABBITMQ_DEFAULT_USER
          value: rabbitmq
        - name: RABBITMQ_DEFAULT_VHOST
          value: /
        - name: RABBITMQ_SSL_CACERTFILE
          value: /rootCA.pem
        - name: RABBITMQ_SSL_CERTFILE
          value: /rootCA.pem
        - name: RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT
          value: "false"
        - name: RABBITMQ_SSL_KEYFILE
          value: /rootCA.key
        - name: RABBITMQ_SSL_VERIFY
          value: verify_none
        image: rabbitmq
        imagePullPolicy: ""
        name: rashma-rabbit
        ports:
        - containerPort: 15671
        - containerPort: 15672
        - containerPort: 5671
        - containerPort: 5672
        resources: {}
        volumeMounts:
        - mountPath: /rootCA.pem
          name: rabbitmq-claim0
          readOnly: true
        - mountPath: /rootCA.key
          name: rabbitmq-claim1
          readOnly: true
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: rabbitmq-claim0
        persistentVolumeClaim:
          claimName: rabbitmq-claim0
          readOnly: true
      - name: rabbitmq-claim1
        persistentVolumeClaim:
          claimName: rabbitmq-claim1
          readOnly: true
status: {}
