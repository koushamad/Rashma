apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "5"
    field.cattle.io/creatorId: u-fvwjn
    field.cattle.io/publicEndpoints: '[{"addresses":["185.165.42.193"],"port":32150,"protocol":"TCP","serviceName":"rashma:mysql-nodeport","allNodes":true},{"addresses":["185.165.42.193"],"port":32150,"protocol":"UDP","serviceName":"rashma:mysql-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-rashma-mysql
  name: mysql
  selfLink: /apis/apps/v1/namespaces/rashma/deployments/mysql
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-rashma-mysql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-06-20T07:38:51Z"
        field.cattle.io/ports: '[[{"containerPort":3306,"dnsName":"mysql-nodeport","kind":"NodePort","name":"tcp3306","protocol":"TCP","sourcePort":0},{"containerPort":3306,"dnsName":"mysql-nodeport","kind":"NodePort","name":"udp3306","protocol":"UDP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-rashma-mysql
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: rashma
        - name: MYSQL_PASSWORD
          value: rashma
        - name: MYSQL_ROOT_PASSWORD
          value: rashma
        - name: MYSQL_USER
          value: rashma
        image: mysql:5.7
        imagePullPolicy: Always
        name: mysql
        ports:
        - containerPort: 3306
          name: tcp3306
          protocol: TCP
        - containerPort: 3306
          name: udp3306
          protocol: UDP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
