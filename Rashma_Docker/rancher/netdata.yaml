apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    field.cattle.io/creatorId: u-fvwjn
    field.cattle.io/publicEndpoints: '[{"addresses":["185.165.42.193"],"port":30298,"protocol":"TCP","serviceName":"rashma:netdata-nodeport","allNodes":true},{"addresses":["185.165.42.193"],"port":30298,"protocol":"UDP","serviceName":"rashma:netdata-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-rashma-netdata
  name: netdata
  selfLink: /apis/apps/v1/namespaces/rashma/deployments/netdata
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-rashma-netdata
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-06-20T07:38:51Z"
        field.cattle.io/ports: '[[{"containerPort":19999,"dnsName":"netdata-nodeport","kind":"NodePort","name":"tcp19999","protocol":"TCP","sourcePort":0},{"containerPort":19999,"dnsName":"netdata-nodeport","kind":"NodePort","name":"udp19999","protocol":"UDP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-rashma-netdata
    spec:
      containers:
      - image: netdata/netdata:v1.22.1
        imagePullPolicy: IfNotPresent
        name: netdata
        ports:
        - containerPort: 19999
          name: tcp19999
          protocol: TCP
        - containerPort: 19999
          name: udp19999
          protocol: UDP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /host/proc:ro
          name: proc
        - mountPath: /host/sys:ro
          name: sys
        - mountPath: /var/run/docker.sock:ro
          name: docker
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /proc
          type: Directory
        name: proc
      - hostPath:
          path: /sys
          type: Directory
        name: sys
      - hostPath:
          path: /var/run/docker.sock
          type: Socket
        name: docker
status: {}
